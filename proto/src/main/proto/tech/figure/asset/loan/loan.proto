syntax = "proto3";

package tech.figure.asset.loan;

import "tech/figure/asset/loan/consent.proto";
import "tech/figure/asset/loan/funding.proto";
import "tech/figure/finance/financial_account.proto";
import "tech/figure/util/util.proto";

/*
  IMPORTANT: The data in this proto should come ONLY from the originator.
  Data generated by smart contracts, marketplace, servicing, or any other app
  needs to go into separate Facts in the loan Scope.
*/
message Loan {

  // Identifiers/Meta
  Meta meta = 1;

  // Loan terms: amount, duration, rates
  Terms terms = 2;

  // Instructions on how to fund loan/where to send money
  repeated FundingInstruction funding_instructions = 3;

  PaymentDetails payment_details = 4;

  // Loan options to which borrower has/has not consented
  repeated Consent consents = 5;

  // All rate discounts available to this asset.
  repeated RateDiscount rate_discounts = 6;


  repeated tech.figure.util.Note additional_info = 998;
  tech.figure.util.AuditFields audit_fields = 999;

}

message Meta {
  tech.figure.util.UUID uuid = 1 ;  // Loan id
  string loan_number = 2 ;          // Originator's internal loan identifier
  string loan_type = 3 ;            // Loan Type (Mortgage, HELOC, Personal Loan, etc.)
  string loan_purpose = 4 ;         // Borrower's intended purpose for loan
  string originator_name = 5;       // Human-readable name of the originating firm
}

message Terms {
  tech.figure.util.UUID uuid = 1;  // Id for this set of terms/offer
  tech.figure.util.Money principal_amount = 2; // Loan amount, not including fees or interest
  tech.figure.util.Money total_amount = 3; // Principal loan amount + origination fees
  int32 term_in_months = 4;

  // Date the Note is signed
  tech.figure.util.Date closing_date = 5;

  int32 offer_index = 10;
  string pay_type = 13;
  string rate_type = 14;
  tech.figure.util.Decimal prime_rate = 15;
  tech.figure.util.Decimal int_rate = 16;
  tech.figure.util.Decimal margin = 17;
  string orig_fee_type = 23;
  tech.figure.util.Decimal origination_fee_rate = 18;
  tech.figure.util.Decimal rate_cap = 20;
  tech.figure.util.Decimal base_pricing_rate = 21;
  tech.figure.util.Decimal other_pricing_rate = 22;
  tech.figure.util.Decimal index_rate = 25;
  string index_rate_type = 26;
}

message PaymentDetails {
  tech.figure.util.Money monthly_payment_amount = 215; // Principal and interest only (no escrow/fees)
  tech.figure.util.Date first_payment_date = 315;
  tech.figure.util.Date grace_period_end_date = 320;
  tech.figure.util.Date amort_start_date = 325 ;
  tech.figure.finance.FinancialAccount autopay_account = 505 ; // - if borrower has agreed to automated monthly payments
}




message RateDiscount {
  string discount_type = 1; // see RateDiscountType
  tech.figure.util.Decimal discount_rate = 2; // Decimal rate between 0.0 and 1.0 where 1.0 = 100%
  bool rate_discount_included_in_margin = 3; // Indicate whether a discount is included in the loan margin or not. E.g. autopay discount only applied if starting on autopay.

  enum RateDiscountType {
    UNKNOWN = 0;
    AUTOPAY = 1;
    CREDIT_UNION_MEMBERSHIP = 2;
  }
}
