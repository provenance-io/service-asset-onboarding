syntax = "proto3";

package portfolio;

option java_package = "io.provenance.proto.portfolio";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "tech/figure/util/util.proto";

message LoanState {
  string                    loan_uuid                = 1 [(validate.rules).string.uuid = true]; // Loan identifier for which this state is calculated
  google.protobuf.Timestamp effective_time           = 3;
  AdditionalFields          additional_fields        = 4;
  ServicingFields           servicing_fields         = 5;
  LoanFields                loan_fields              = 6;
  LoanTapeLedgerEntries     loan_tape_ledger_entries = 7;
}

message AdditionalFields {
  repeated LoanTapeField fields = 1;
}

message LoanTapeLedgerEntries {
  repeated LoanTapeLedgerEntry entries = 1;
}

message LoanTapeField {
  string key          = 1;
  string tape_name    = 2;
  string field_type   = 3;
  string field_source = 4;
  string value        = 5;
}

message ServicingFields {
  tech.figure.util.Date  cut_off_date            = 1;
  tech.figure.util.Date  servicing_transfer_date = 2;
  tech.figure.util.Date  loan_orig_date          = 3;
  tech.figure.util.Date  int_accrual_start_date  = 4;
  tech.figure.util.Date  maturity_date           = 5;
  tech.figure.util.Date  first_payment_date      = 6;
  tech.figure.util.Date  next_payment_date       = 7;
  tech.figure.util.Date  last_payment_date       = 8;
  tech.figure.util.Date  delq_dt                 = 9;
  tech.figure.util.Date  forbearance_begin_date  = 10;
  tech.figure.util.Date  forbearance_end_date    = 11;
  tech.figure.util.Date  recording_date          = 12;
  tech.figure.util.Money loan_orig_balance       = 13;
  tech.figure.util.Money daily_int_amount        = 14;
  tech.figure.util.Money accrued_int             = 15;
  tech.figure.util.Money loan_upb                = 16;
  tech.figure.util.Rate  loan_orig_int_rate      = 17;
  tech.figure.util.Rate  loan_current_int_rate   = 18;
  tech.figure.util.Rate  servicing_fee_rate      = 19;
}

message LoanFields {
  tech.figure.util.Date  start_date          = 1;
  string                 loan_id             = 2 [(validate.rules).string.uuid = true];
  string                 originator_id       = 3 [(validate.rules).string.uuid = true];
  tech.figure.util.Money property_orig_value = 4;
  tech.figure.util.Money free_cash_flow      = 5;
  tech.figure.util.Money income              = 6;
  double                 dti_back            = 7;
  double                 uw_cltv             = 8;
  int32                  loan_term           = 9;
  int32                  loan_orig_term      = 10;
  int32                  fico                = 11;
}

message LoanTapeLedgerEntry {
  string                       entry_uuid          = 1 [(validate.rules).string.uuid = true];
  string                       ledger_entry_type   = 2;
  tech.figure.util.Money       amount              = 10;
  LoanTapeLedgerEntryBreakdown breakdown           = 11;
  LoanTapeLedgerEntryBreakdown effective_breakdown = 12;
  google.protobuf.Timestamp    effective_time      = 20;
  google.protobuf.Timestamp    posted_time         = 21;
  google.protobuf.Timestamp    reversed_time       = 25;
  string                       reversed_reason     = 26;
  string                       owner_at_post_time  = 30 [(validate.rules).string.uuid = true];
}

message LoanTapeLedgerEntryBreakdown {
  repeated Allocation before  = 1;
  repeated Allocation applied = 2;
  repeated Allocation after   = 3;
}

message Allocation {
  AllocationType         allocation_type = 2; // One of AllocationType
  tech.figure.util.Money amount_owed     = 3; // Balance owed - if LedgerEntry adjustment, alters owed amounts without appearing as if a payment were made (no change to applied)
  tech.figure.util.Money amount_applied  = 4; // Amount paid so far - if LedgerEntry, shows portion of entry applied to a type (or requested to be applied to a type)

  enum AllocationType {
    UNKNOWN_ALLOCATION_TYPE                 = 0;
    BORROWER_RECOVERABLE_FEES               = 21; //
    CAP_ORIGINATION_FEE                     = 5;  //
    CREDIT                                  = 9;  // Credit owed to the borrower
    DEFERRED_INTEREST                       = 27; // Deferred interest
    DEFERRED_PRINCIPAL                      = 20; //
    ESCROW                                  = 16; // Escrow
    ESCROW_INTEREST                         = 34;
    FEE                                     = 1;  // Generic fee
    FLOOD                                   = 2;  //
    HAZARD                                  = 3;  //
    HOA_FEE                                 = 13; //
    HOMEOWNER_TAXES                         = 12; //
    INTEREST                                = 4;  // Interest
    INTEREST_PREPAYMENT                     = 15; //
    INVESTOR_RECOVERABLE_FEES               = 19; //
    LATE_FEE                                = 14; // Late fees
    LENDER_PLACED_FLOOD_INSURANCE           = 24; // Force-placed flood insurance
    LENDER_PLACED_HAZARD_INSURANCE          = 25; // Force-placed hazard insurance
    MORTGAGE_INSURANCE                      = 11; //
    NON_CAP_ORIGINATION_FEE                 = 6;  //
    NSF_FEE                                 = 17; // Non-sufficient funds fee
    PRINCIPAL                               = 7;  // Principal
    PRINCIPAL_OVERPAY                       = 8;  // Principal paid in excess of monthly required amount (reporting type, does not impact loan balance)
    RECORDING_FEE                           = 10; //
    RESTRICTED_ESCROW                       = 22; //
    SERVICER_ADVANCE_DELINQUENCY_EXPENSE    = 32;
    SERVICER_ADVANCE_HOA_REPAYMENT          = 30;
    SERVICER_ADVANCE_LEGAL_EXPENSE          = 33;
    SERVICER_ADVANCE_PROPERTY_PRESERVATION  = 31;
    SERVICER_ADVANCE_PROPERTY_TAX_REPAYMENT = 29;
    SUBORDINATION_FEE                       = 28; // Subordination fee
    SUSPENSE                                = 23; // Partial payments that cannot be applied to the balance of the loan are held in suspense
  }
}
